<?xml version="1.0" encoding="UTF-8"?>
<parser 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="http://www.qedeq.org/0_04_07/xml/parser.xsd">
 	<prefixOperator 
 		startSymbol	="~"
 		qedeq		="NOT"
 		priority	="110"
 		min		="1"
 		max		="1"
 	/>
 	<prefixOperator 
 		startSymbol	="-"
 		qedeq		="NOT"
 		priority	="110"
 		min		="1"
 		max		="1"
 	/>
 	<infixOperator 
 		startSymbol	="&amp;"
 		qedeq		="AND"
 		priority	="100"
 		min		="2"
 	/>
 	<infixOperator 
 		startSymbol	="|"
 		qedeq		="OR"
 		priority	="90"
 		min		="2"
 	/>
 	<infixOperator 
 		startSymbol	="-&gt;"
 		qedeq		="IMPL"
 		priority	="80"
 		min		="2"
 		max		="2"
 	/>
 	<infixOperator 
 		startSymbol	="=&gt;"
 		qedeq		="IMPL"
 		priority	="80"
 		min		="2"
 		max		="2"
 	/>
 	<infixOperator 
 		startSymbol	="&lt;-&gt;"
 		qedeq		="EQUI"
 		priority	="80"
 		min		="2"
 	/>
 	<infixOperator 
 		startSymbol	="&lt;=&gt;"
 		qedeq		="EQUI"
 		priority	="80"
 		min		="2"
 	/>
 	<prefixOperator 
 		startSymbol	="all"
 		qedeq		="ALL"
 		priority	="40"
 		min		="2"
 		max		="3"
 	/>
 	<prefixOperator 
 		startSymbol	="exists"
 		qedeq		="EXISTS"
 		priority	="40"
 		min		="2"
 		max		="3"
 	/>
 	<infixOperator 
 		startSymbol	="in"
 		qedeq		="IN"
 		priority	="200"
 		min		="2"
 		max		="2"
 	/>
 	<infixOperator 
 		startSymbol	="="
 		qedeq		="EQUAL"
 		priority	="200"
 		min		="2"
 	/>
 	<complexOperator 
 		startSymbol	="{"
 		separatorSymbol =","
 		endSymbol	="}"
 		qedeq		="SET"
 		priority	="200"
 		min		="0"
 	/>
 	<complexOperator 
 		startSymbol	="{"
 		separatorSymbol =":"
 		endSymbol	="}"
 		qedeq		="SETPROP"
 		priority	="200"
 		min		="2"
 		max		="2"
 	/>
</parser>
<!--


        operators.add(new Operator("~",      "NOT",   110, 1, 1, 1));
        operators.add(new Operator("-",      "NOT",   110, 1, 1, 1));
        operators.add(new Operator("&amp;",      "AND",   100, 0, 2));
        operators.add(new Operator("|",      "OR",     90, 0, 2));
//        operators.put("v",      new Operator("v",      "OR",     90, 0, 2));
        operators.add(new Operator("-&gt;",     "IMPL",   80, 0, 2, 2));
        operators.add(new Operator("=&gt;",     "IMPL",   80, 0, 2, 2));
        operators.add(new Operator("&lt;-&gt;",    "EQUI",   80, 0, 2));
        operators.add(new Operator("&lt;=&gt;",    "EQUI",   80, 0, 2));
        operators.add(new Operator("all",    "ALL",    40, 1, 2, 3));
        operators.add(new Operator("exists", "EXISTS", 40, 1, 2, 3));
        operators.add(new Operator("in",     "IN",    200, 0, 2, 2));
        operators.add(new Operator("=",      "EQUAL", 200, 0, 2));
        operators.add(new Operator("{", ",", "}", "SET", 200, 0));
        operators.add(new Operator("{", ":", "}", "SETPROP", 200, 2, 2));
-->