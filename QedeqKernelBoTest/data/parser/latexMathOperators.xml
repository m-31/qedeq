<?xml version="1.0" encoding="UTF-8"?>
<parser 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="http://www.qedeq.org/0_04_07/xml/parser.xsd">
 	<prefixOperator 
 		startSymbol	="neg"
 		qedeq		="NOT"
 		priority	="110"
 		min		="1"
 		max		="1"
 	/>
 	<infixOperator 
 		startSymbol	="land"
 		qedeq		="AND"
 		priority	="100"
 		min		="2"
 	/>
 	<infixOperator 
 		startSymbol	="lor"
 		qedeq		="OR"
 		priority	="90"
 		min		="2"
 	/>
 	<infixOperator 
 		startSymbol	="impl"
 		qedeq		="IMPL"
 		priority	="80"
 		min		="2"
 		max		="2"
 	/>
 	<infixOperator 
 		startSymbol	="equi"
 		qedeq		="EQUI"
 		priority	="80"
 		min		="2"
 	/>
 	<prefixOperator 
 		startSymbol	="forall"
 		qedeq		="ALL"
 		priority	="140"
 		min		="2"
 		max		="2"
 	/>
 	<prefixOperator 
 		startSymbol	="exists"
 		qedeq		="EXISTS"
 		priority	="140"
 		min		="2"
 		max		="2"
 	/>
 	<infixOperator 
 		startSymbol	="in"
 		qedeq		="IN"
 		priority	="200"
 		min		="2"
 		max		="2"
 	/>
 	<infixOperator 
 		startSymbol	="="
 		qedeq		="EQUAL"
 		priority	="200"
 		min		="2"
 	/>
 	<prefixOperator 
 		startSymbol	="isSet"
 		qedeq		="isSet"
 		priority	="200"
 		min		="1"
 		max		="1"
 	/>
 	<prefixOperator 
 		startSymbol	="isSet"
 		qedeq		="isSet"
 		priority	="200"
 		min		="1"
 		max		="1"
 	/>
 	<complexOperator 
 		startSymbol	="{"
 		separatorSymbol =","
 		endSymbol	="}"
 		qedeq		="SET"
 		priority	="10"
 		min		="0"
 	/>
 	<complexOperator 
 		startSymbol	="{"
 		separatorSymbol ="|"
 		endSymbol	="}"
 		qedeq		="SET"
 		priority	="10"
 		min		="2"
 		max		="2"
 	/>
 	<prefixOperator 
 		startSymbol	="phi"
 		qedeq		="PREDVAR_1"
 		priority	="200"
 		min		="1"
 		max		="1"
 	/>
 	<prefixOperator 
 		startSymbol	="psi"
 		qedeq		="PREDVAR_2"
 		priority	="200"
 		min		="1"
 		max		="1"
 	/>
 	<functionOperator 
 		startSymbol	="alpha"
 		qedeq		="PREDVAR_3"
 		priority	="200"
 		min		="0"
 	/>
 	<functionOperator 
 		startSymbol	="beta"
 		qedeq		="PREDVAR_4"
 		priority	="200"
 		min		="0"
 	/>
 	<infixOperator 
 		startSymbol	="cup"
 		qedeq		="UNION"
 		priority	="30"
 		min		="2"
 	/>
 	<infixOperator 
 		startSymbol	="cap"
 		qedeq		="INTER"
 		priority	="40"
 		min		="2"
 	/>
 	<infixOperator 
 		startSymbol	="defp"
 		qedeq		="DEFP"
 		priority	="10"
 		min		="2"
 		max		="2"
 	/>
 	<functionOperator 
 		startSymbol	="A"
 		qedeq		="A"
 		priority	="200"
 		min		="0"
 		max		="0"
 	/>
 	<functionOperator 
 		startSymbol	="B"
 		qedeq		="B"
 		priority	="200"
 		min		="0"
 		max		="0"
 	/>
 	<functionOperator 
 		startSymbol	="C"
 		qedeq		="C"
 		priority	="200"
 		min		="0"
 		max		="0"
 	/>
 	<functionOperator 
 		startSymbol	="x"
 		qedeq		="x"
 		priority	="200"
 		min		="0"
 		max		="0"
 	/>
 	<functionOperator 
 		startSymbol	="x_1"
 		qedeq		="x_1"
 		priority	="200"
 		min		="0"
 		max		="0"
 	/>
 	<functionOperator 
 		startSymbol	="y"
 		qedeq		="y"
 		priority	="200"
 		min		="0"
 		max		="0"
 	/>
</parser>
<!--


        operators.add(new Operator("neg",     "NOT",   110, 1, 1, 1));
        operators.add(new Operator("land",    "AND",   100, 0, 2));
        operators.add(new Operator("lor",     "OR",     90, 0, 2));
        operators.add(new Operator("impl",    "IMPL",   80, 0, 2, 2));
        operators.add(new Operator("equi",    "EQUI",   80, 0, 2));
        operators.add(new Operator("forall",  "ALL",    140, 1, 2, 2));
        operators.add(new Operator("exists",  "EXISTS", 140, 1, 2, 2));
        operators.add(new Operator("in",      "IN",    200, 0, 2, 2));
        operators.add(new Operator("=",         "EQUAL", 200, 0, 2));
        operators.add(new Operator("isSet",     "isSet", 200, 1, 1, 1));
        operators.add(new Operator("{", ",", "}", "SET", 10, 0));
        operators.add(new Operator("{", "|", "}", "SETDEF", 10, 2, 2));
        operators.add(new Operator("phi",     "PREDVAR_1",  200, 1, 1, 1));
        operators.add(new Operator("psi",     "PREDVAR_2",  200, 1, 1, 1));
        operators.add(new Operator("alpha",   "PREDVAR_3",  200, 4, 0, -1));
        operators.add(new Operator("beta",    "PREDVAR_4",  200, 4, 0, -1));
        operators.add(new Operator("cup",     "UNION",    30, 0, 2));
        operators.add(new Operator("cap",     "INTER",    40, 0, 2));
        operators.add(new Operator("defp",    "DEFP", 10, 0, 2));
-->