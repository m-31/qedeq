Making a release for *Hilbert II*


Prepare for Build
-----------------
- check eclipse task list
- run FindBugs
- run Classcycle


Preliminary Build
-----------------
- test within eclipse if all works ok
- run JUnit tests til they are all green
- check if all packages are in java doc package list
- run mimeBuild to create new XSD documentation
- build project with QedeqRel/scripts/buildQedeqReleaseSe.xml
  and test
  + direct execution, is all still working?
  + look into the generated pdfs if they look ok
  + check java doc
    > is every package there
    > look at the messages during build project
  + exame index.html and update it
  + transfer release to WebPage
    > copy xml-apis.jar and xercesImpl.jar from eclipse/webstart 
      directory into release webstart directory (they are stripped
      of the original manifest.mf and are signed with jarsigner due 
      to an java webstart bug)
    > web execution,is that ok too?
    > indide FireFox run checky to validate the HTML
- put build in temp order and name it
  "release_" + version + "_" + build number


Update Build Documentation
--------------------------
- compare build with last build and document changes
  in QedeqRel/inc/se/changes.txt
- update QedeqRel/inc/se/readme.txt
- update QedeqRel/inc/se/release.txt (whatfor???)


Update CVS Tags
---------------
- commit everything to subversion, nothing must remain marked as
  changed. 
- run copySubversionToCvs.xml
- start eclipse_cvs
  1. synchronize
  2. clean timestamps
  3. commit changes
  4. close eclipse_cvs
- run copyCvsToSubversion.xml
- synchronize and commit


Real Build
----------
- delete ".clover" directory if still existent 
  (otherwise old results mix with new ones)
- turn clover on
- run JUnit tests
- test GUI within eclipse, open all windows
- create clover report
- save report with source code to qedeq_gen/release/se/dest/doc/clover
 (be shure it is empty)
- build again (inkl. "release_" + version + "_" + sub version copy
- delete .clover and revert .project and .classpath
- tag CVS as in the following example:
  qedeq_unstable_0_01_06_2005-03-09
- tag subversion
  + open team create Branch/Tags
    for QedeqKernelSe for example:
    https://pmii.svn.sourceforge.net/svnroot/pmii/tags/qedeq_unstable_0_03_09_2008-03-30/QedeqKernelSe
    with version as comment
- transfer release to WebPage (se above)


Make Release known
------------------
- goto sourceforge.net and create new release
- upload files *.tar.gz and *.zip
- finish release creation
- update sourceforge entry
- update qedeq_pad.xml file and put it to web page


Update Web Page
---------------
- adapt at least
  + download.html 
  + development.html
  + webstart.html
  + news.html
  + site.csv
  + planning.html ?
- run W3C html and link validation for web page

