Hilbert II, Version @QEDEQ_VERSION@ (@QEDEQ_CODENAME@), @QEDEQ_TIMESTAMP@

Version History

@QEDEQ_VERSION@
=======

Functional Changes
------------------  

  Extensions
  ----------
  * multiple formal errors per formula are shown
  * source viewer jumps to error position if the error is clicked
  
  Fixed Bugs
  ----------
  * only one instance of application can be started
  * if QEDEQ modules are loaded from local files the status messages 
    announce that too
  * "invisible selection problem" (see below)

  Other Changes
  -------------
  * loading failures of referenced QEDEQ modules point directy to import
    label
  * java version ist checked during startup and must be at least 1.4.2
  * loading sequence for referenced modules changed: now modules are
    tryed according their enumeration
  * thanks to Santhosh Kumar the GUI shows now multiple error positions
    within the source code and the current line is highlighted
  * clicking the error in the error list jumps directly to the incorrect
    source code
  * when starting with WebStart the appliction directory is now
    qedeq within {user.home}
  * leaner XmlModuleLoader


XML Files
-----------

  Extensions
  ----------
  none

  Fixed Bugs
  ----------
  none

  Other Changes
  -------------
  none


Source Code
-----------

  Extensions
  ----------
  * FormulaChecker collects all occurring errors in a
    LogicalCheckExceptionList and QedeqBoFormalLogicChecker transforms
    them into SourceFileException s
  * code from AddAction and AddFileAction was put into Kernel
  * new class ErrorSelectionListener to indicate an error selection
    various classes implement this listener now
  * by clicking the error in the ModuleErrorListPane error list the
    source viewer shows the error position 
  * two more LoadingState s

  Fixed Bugs
  ----------
  * LogPane uses SwingUtilities to invoke the events in the Swing event
    thread
  * solution of the "invisible selection problem" within QedeqTreeCtrl
    because the root is invisible its children are invisible too. to make
    them visible we must expand the the path of the root node. but this 
    is possible only if there is already a child node there. so if the
    first node is added we must expand the path of root. when the model 
    sends us this event we can not simply expand the path instantly
    because if we do so, the new node is added twice! This is done for
    example for VariableHeightLayoutCache.visibleNodes in the two methods
    setExpandedState(TreePath path, boolean isExpanded) (called by 
    expandPath) and in treeNodesInserted(TreeModelEvent e) (called by 
    DefaultTreeModel.nodesWereInserted(TreeNode node, int[] childIndices)
    To solve this dilemma we simply generate a new event that is handled
    later on via SwingUtilities.invokeLater
  * QedeqTreeNode has now correct equals method


  Other Changes
  -------------
  * simplified DefaultSourceFileExceptionList
  * SourceArea must have a start and end position, otherwise a
    NullPointerException is raised
  * GUI actions catch RuntimeException to get informed about failures
  * initial module loading history entries start with qedeq.org
  * instead of ErrorListPane we have the ModuleErrorListPane now
  * now called after GUI launched: KernelContext.getInstance().startup()
  * simplified QedeqTreeCellRenderer
  * (Kernel)QedeqBo has no longer encoding information
  * ModuleLoader doesn't throw ModuleNotFoundException
  * KernelServices.loadModule(ModuleAddress address) doesn't throw a 
    SourceFileExceptionList any longer
  * DefaultSourceFileExceptionList has fewer constructors
  

XSD
---

  Extensions
  ----------
  * added new element FORMAL_PROOF

  Fixed Bugs
  ----------
  none

  Other Changes
  -------------
  * small reorganization

